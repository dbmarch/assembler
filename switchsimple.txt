; 	Read in 16 switch settings into array.   
;   each time you read in we display the LED
;   After all are read in we  output all leds in sequence.
;   Output 16 array to LEDS with small delay
;------------------------------------------------------------------------------
;	Code segment:
;------------------------------------------------------------------------------
; ARRAY 1    0...15
; ARRAY 2    16..31
;------------------------------------------------------------------------------
    .code;
@AGAIN  SUB R0, R0;                 R0 = 0   This will be index into array.
    SUB R5, R5;
    ADDC R5, 0x01;
    ST  R5, M[R0, 0x0];
    ADDC R0, 0x01;
    ADDC R5, 0x01;
    ST  R5, M[R0, 0x0];
    ADDC R0, 0x01;
    ADDC R5, 0x01;
    ST  R5, M[R0, 0x0];
    ADDC R0, 0x01;
    ADDC R5, 0x01;
    ST  R5, M[R0, 0x0];

    SUB R0, R0;                 R0 = 0   This will be index into array.
    SUB R6, R6;                 R6 = 0   This will track how many elements we read in.
    ADDC R6, 0x4;               R6 = 16  4 values
; Load in the arrays 
    SUB R8, R8;
    ADDC R8, 0x10;

    ; Wait for PB to be a 1
@LOOP1  IN R5;      READ in R5
    RRC R5, 0x01;
    JMP C0 @LOOP1

; PB is a 1
@LOOP2  IN R5;      READ in R5
    RRC R5, 0x01;
    JMP C1 @LOOP2

; PB is a 0  - Load the array
    LD  R5, M[R0, 0x0];
    OR  R5, R8;
    OUT R5;
    
    ADDC R0, 0x1;                   R0++
    SUBC R6, 0x1;                   R6--
    JMP Z0, @LOOP1;                 Go back and read more switches.

;  ALL  elements are read in.
   JMP U0, @AGAIN

    .endcode;
